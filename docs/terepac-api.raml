#%RAML 1.0
title: Terepac ONE
version: v1
baseUri: https://api.terepac.one/{version}
annotationTypes:
  role:
    enum: [ADMIN]
securitySchemes:
  JWT:
    description: A JSON Web Token & Client ID must be sent in the request header.
    type: x-jwt
    describedBy:
      headers:
        x-access-token:
          type: string
          description: A JWT access token. Get the JWT using /authenticate
        x-client-id:
          type: string
          description: Your unique client ID.
      responses:
        417:
          body:
            application/json:
              example: |
                {
                  "code": "417",
                  "message": "invalid api key"
                }
documentation:
  - title: Welcome
    content: |
      The Terepac ONE RESTful API uses JSON Web Tokens (JWT) to authenticate each
      request. Each secured request requires the following 2 HTTP headers:
      ```
      x-client-id: [client ID]
      x-access-token: [jwt]
      ```
      As we are only in alpha right now, only Terepac partners can get a
      login. If you are a partner, please contact
      [Darryl Patterson](mailto:darryl.patterson@terepac.com).
      Please see the AUTHENTICATION documentation to find out how to get
      your JWT.

/authentication:
  displayName: AUTHENTICATION
  description: |
    Pass on the email address and password as JSON. The system will return
    a JWT that will be used for future secured API requests.

    If there is an issue with the client ID or JWT, the system will return
    an error as a JSON document. Here are the two possible error responses:
    ```
    HTTP status code 401
    {
      message: 'The supplied x-access-token (JWT) is not valid.'
    }
    ```
    ```
    HTTP status code 401
    {
      message: 'One or both of the required headers (x-client-id, x-access-token) are missing.'
    }
    ```
  post:
    description: |
      Authenticates the user and returns a JSON Web Token.
    body:
      application/json:
        example: |
          {
            "email": "john@example.com",
            "password": "super_secret"
          }
    responses:
      200:
        description: Authenticate was successful.
        body:
          application/json:
            example: |
              {
                "message": "Authentication successful.",
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"
              }
      404:
        description: The email and/or the password were incorrect.
        body:
          application/json:
            example: |
              {
                "message": "Authentication failed. User not found."
              }
      409:
        description: There is no client associated with the user. Contact Terepac to get this fixed.
        body:
          application/json:
            example: |
              {
                "message": "No client associated with user."
              }
/clients:
  (role) : ADMIN
  displayName: CLIENTS
  description: |
    Lets you manipulate and access client data and telemetry tags.
  securedBy: [JWT]
  get:
    description: |
      Allows you to get a list of the clients you are allowed to access.
    body:
      application/json:
        example: |
          { }
    responses:
      200:
        description: Returns an array of clients.
        body:
          application/json:
            example: |
              [
                {
                  "created": "2016-01-29T16:04:27.000Z",
                  "updated": "2016-01-29T16:04:27.000Z",
                  "apikey": {
                    "id": "[CLIENT_ID]"
                  },
                  "companyName": "[COMPANY_NAME]",
                  "address": {
                    "street": "[STREET]",
                    "street2": "[STREET_2]",
                    "city": "[CITY]",
                    "province": "[PROVINCE]",
                    "postalCode": [POSTAL_CODE]"",
                    "country": "[COUNTRY]"
                  },
                  "contact": {
                    "firstName": "[FIRST_NAME]",
                    "lastName": "[LAST_NAME]",
                    "email": "[EMAIL_ADDRESS]",
                    "phone": "[PHONE_NUMBER]"
                  },
                  "reseller": [true|false]
                }
              ]
      401:
        description: Not authorized.
        body:
          application/json:
            example: |
              {
                message: "You are not authorized to access this resource."
              }
  post:
    (role) : ADMIN
    description: |
      Allows you to add a new client.
    body:
      application/json:
        example: |
          {
            "companyName": "[COMPANY_NAME]",
            "address": {
              "street": "[STREET]",
              "street2": "[STREET_2]",
              "city": "[CITY]",
              "province": "[PROVINCE]",
              "postalCode": [POSTAL_CODE]"",
              "country": "[COUNTRY]"
            },
            "contact": {
              "firstName": "[FIRST_NAME]",
              "lastName": "[LAST_NAME]",
              "email": "[EMAIL_ADDRESS]",
              "phone": "[PHONE_NUMBER]"
            },
            "reseller": [true|false]
          }
    responses:
      200:
        description: Returns the added client.
        body:
          application/json:
            example: |
              {
                "created": "2016-01-29T16:04:27.000Z",
                "updated": "2016-01-29T16:04:27.000Z",
                "apikey": {
                  "id": "[CLIENT_ID]"
                },
                "companyName": "[COMPANY_NAME]",
                "address": {
                  "street": "[STREET]",
                  "street2": "[STREET_2]",
                  "city": "[CITY]",
                  "province": "[PROVINCE]",
                  "postalCode": [POSTAL_CODE]"",
                  "country": "[COUNTRY]"
                },
                "contact": {
                  "firstName": "[FIRST_NAME]",
                  "lastName": "[LAST_NAME]",
                  "email": "[EMAIL_ADDRESS]",
                  "phone": "[PHONE_NUMBER]"
                },
                "reseller": [true|false]
              }
      400:
        description: Database error adding the client.
        body:
          application/json:
            example: |
              {
                message: "Error inserting the client: [ERROR_MESSAGE]"
              }
      401:
        description: Not authorized.
        body:
          application/json:
            example: |
              {
                message: "You are not authorized to access this resource."
              }
  /{id}:
    description: |
      Allows you to work with an individual client.
    securedBy: [JWT]
    uriParameters:
      id:
        description: The clients's ObjectId.
        type: string
    get:
      description: |
        Returns a single client.
      body:
        application/json:
          example: |
            { }
      responses:
        200:
          description: Returns a client.
          body:
            application/json:
              example: |
                {
                  "created": "2016-01-29T16:04:27.000Z",
                  "updated": "2016-01-29T16:04:27.000Z",
                  "apikey": {
                    "id": "[CLIENT_ID]"
                  },
                  "companyName": "[COMPANY_NAME]",
                  "address": {
                    "street": "[STREET]",
                    "street2": "[STREET_2]",
                    "city": "[CITY]",
                    "province": "[PROVINCE]",
                    "postalCode": [POSTAL_CODE]"",
                    "country": "[COUNTRY]"
                  },
                  "contact": {
                    "firstName": "[FIRST_NAME]",
                    "lastName": "[LAST_NAME]",
                    "email": "[EMAIL_ADDRESS]",
                    "phone": "[PHONE_NUMBER]"
                  },
                  "reseller": [true|false]
                }
        401:
          description: Not authorized.
          body:
            application/json:
              example: |
                {
                  message: "You are not authorized to access this resource."
                }
        404:
          description: Client not found.
          body:
            application/json:
              example: |
                {
                  message: "Client not found"
                }
    put:
      description: |
        Allows you to edit a client.
      body:
        application/json:
          example: |
            {
              "companyName": "[COMPANY_NAME]",
              "address": {
                "street": "[STREET]",
                "street2": "[STREET_2]",
                "city": "[CITY]",
                "province": "[PROVINCE]",
                "postalCode": [POSTAL_CODE]"",
                "country": "[COUNTRY]"
              },
              "contact": {
                "firstName": "[FIRST_NAME]",
                "lastName": "[LAST_NAME]",
                "email": "[EMAIL_ADDRESS]",
                "phone": "[PHONE_NUMBER]"
              },
              "reseller": [true|false]
            }
      responses:
        200:
          description: Client saved.
          body:
            application/json:
              example: |
                {
                  "created": "2016-01-29T16:04:27.000Z",
                  "updated": "2016-01-29T16:04:27.000Z",
                  "apikey": {
                    "id": "[CLIENT_ID]"
                  },
                  "companyName": "[COMPANY_NAME]",
                  "address": {
                    "street": "[STREET]",
                    "street2": "[STREET_2]",
                    "city": "[CITY]",
                    "province": "[PROVINCE]",
                    "postalCode": [POSTAL_CODE]"",
                    "country": "[COUNTRY]"
                  },
                  "contact": {
                    "firstName": "[FIRST_NAME]",
                    "lastName": "[LAST_NAME]",
                    "email": "[EMAIL_ADDRESS]",
                    "phone": "[PHONE_NUMBER]"
                  },
                  "reseller": [true|false]
                }
        401:
          description: Not authorized.
          body:
            application/json:
              example: |
                {
                  message: "You are not authorized to access this resource."
                }
        404:
          description: Client not found.
          body:
            application/json:
              example: |
                {
                  "message": "Client not found"
    /tags:
      securedBy: [JWT]
      get:
        description: Gets a list of the client's tags.
      /{tag}:
        securedBy: [JWT]
        uriParameters:
          tag:
            description: The tag.
            type: string
        get:
          description: Gets a single tag.
      /search:
        securedBy: [JWT]
        description: |
          Allows you to search multiple tags.
        get:
          description: Queries for telemetry using tags.
          queryParameters:
            tags:
              example: tags=D001_LOC1_TI,D002_LOC1_EI
            start:
              example: start=2016-01-29T16:04:27.000Z
            end:
              example: end=2016-01-29T16:04:27.000Z
          responses:
            200:
              description: Returns an array of telemetry data.
              body:
                application/json:
                  example: |
                    [
                      {

                      }
                    ]
    /devices:
      securedBy: [JWT]
      get:
        description: Gets a list of the client's devices.
      post:
        description: Adds a new devices to the client.
    /users:
      securedBy: [JWT]
      get:
        description: Gets a list of the client's users.
      post:
        description: Adds a new user to the client.
/users:
  displayName: USERS
  description: |
    Lets you manipulate users.
  securedBy: [JWT]
  get:
    description: Gets a list of users.
  /{id}:
    get:
      description: Gets a single user.
    put:
      description: Edits a user (can't change password).
    /password:
      put:
        description: Changes a user's password.
/devices:
  displayName: DEVICES
  description: |
    Lets you manipulate your devices and access telemetry.
  securedBy: [JWT]
  get:
    description: |
      Allows you to get a list of all of your devices.
    responses:
      200:
        description: Returns an array of all of your devices.
        body:
          application/json:
            example: |
              [
                {
                  "created": "2016-01-29T16:04:27.000Z",
                  "updated": "2016-01-29T16:04:27.000Z",
                  "serialNumber": "15",
                  "type": "hydrant",
                  "code": "Client assigned code",
                  "descriptor": "Client assigned descriptor"
                }
              ]
  /{id}:
    description: |
      Allows you to work with an individual device.
    securedBy: [JWT]
    uriParameters:
      id:
        description: The device's serial number
        type: string
    get:
      description: |
        Returns a single device.
      body:
        application/json:
          example: |
            { }
      responses:
        200:
          description: Returns a device.
          body:
            application/json:
              example: |
                {
                  "created": "2016-01-29T16:04:27.000Z",
                  "updated": "2016-01-29T16:04:27.000Z",
                  "serialNumber": "15",
                  "type": "hydrant",
                  "code": "Client assigned code",
                  "descriptor": "Client assigned descriptor"
                }
        404:
          description: Device not found.
          body:
            application/json:
              example: |
                {
                  "message": "Device not found"
                }
    put:
      description: |
        Allows you to edit an existing device.
      body:
        application/json:
          example: |
            {
              "code": "Client assigned code",
              "descriptor": "Client assigned descriptor"
            }
      responses:
        200:
          description: Device saved.
          body:
            application/json:
              example: |
                {
                  "message": "Device saved."
                }
        404:
          description: Device not found.
          body:
            application/json:
              example: |
                {
                  "message": "Device not found"
                }
    /settings:
      securedBy: [JWT]
      get:
        description: |
          Allows you to get the settings for a device.
        body:
          application/json:
            example: |
              { }
        responses:
          200:
            description: Returns the settings for a device.
            body:
              application/json:
                example: |
                  {
                    "serialNumber": "15",
                    "code": "Client assigned code",
                    "normalrate": 0,
                    "highlimit": 0,
                    "lowlimit": 0,
                    "deadband": 0,
                    "bufferallduration": 0,
                    "preroll": 0,
                    "postroll": 0,
                    "starttime": "2016-01-29T16:04:27.000Z",
                    "stoptime": "2016-01-29T16:04:27.000Z"
                  }
          404:
            description: Device not found.
            body:
              application/json:
                example: |
                  {
                    "message": "Device not found"
                  }
      put:
        description: |
          Allows you to set the settings for a device.
        body:
          application/json:
            example: |
              {
                "normalrate": 0,
                "highlimit": 0,
                "lowlimit": 0,
                "deadband": 0,
                "bufferallduration": 0,
                "preroll": 0,
                "postroll": 0,
                "starttime": "2016-01-29T16:04:27.000Z",
                "stoptime": "2016-01-29T16:04:27.000Z"
              }
        responses:
          200:
            description: Successful
            body:
              application/json:
                example: |
                  {
                    "message": "Settings have been saved"
                  }
          404:
            description: Device not found.
            body:
              application/json:
                example: |
                  {
                    "message": "Device not found"
                  }
    /telemetries:
      securedBy: [JWT]
      get:
        description: |
          Returns telemetry data.
        queryParameters:
          start:
            example: start=2016-01-29T16:04:27.000Z
          end:
            example: end=2016-01-29T16:04:27.000Z
          sensors:
            example: sensors=temp&sensors=pres&sensors=humi&sensors=aclx&sensors=acly&sensors=aclz&sensors=shck
        responses:
          200:
            description: An array of telemetries
            body:
              application/json:
                example: |
                  [{
                    "created": "2016-01-29T16:04:27.000Z",
                    "sensor": "temperature",
                    "data": {
                       "unit": "celcius",
                       "values": {
                           "min": 50,
                           "max": 80,
                           "average":65,
                           "current": 55
                       }
                     }
                  }]
          404:
            description: Device not found.
            body:
              application/json:
                example: |
                  {
                    "message": "Device not found"
                  }
